Option Explicit

Sub StackAllSheets_AllContent_WithTabInColA()
    Dim wb As Workbook: Set wb = ActiveWorkbook
    Dim ws As Worksheet, wsOut As Worksheet
    Dim destRow As Long, lastRow As Long, lastCol As Long
    Dim rng As Range
    Dim outName As String

    Application.ScreenUpdating = False
    Application.EnableEvents = False
    Application.Calculation = xlCalculationManual

    ' Feuille de sortie (nom unique, aucune suppression)
    outName = UniqueSheetName(wb, "StackResult")
    On Error GoTo AddErr
    Set wsOut = wb.Worksheets.Add(After:=wb.Worksheets(wb.Worksheets.Count))
    wsOut.Name = outName
    On Error GoTo 0

    destRow = 1

    ' Boucle sur les feuilles du même classeur
    For Each ws In wb.Worksheets
        If ws.Name <> wsOut.Name Then
            ' Zone utilisée
            On Error Resume Next
            lastRow = 0: lastCol = 0
            lastRow = ws.Cells.Find(What:="*", LookIn:=xlFormulas, _
                                    SearchOrder:=xlByRows, SearchDirection:=xlPrevious).Row
            lastCol = ws.Cells.Find(What:="*", LookIn:=xlFormulas, _
                                    SearchOrder:=xlByColumns, SearchDirection:=xlPrevious).Column
            On Error GoTo 0

            If lastRow > 0 And lastCol > 0 Then
                Set rng = ws.Range(ws.Cells(1, 1), ws.Cells(lastRow, lastCol))

                ' 1) Colonne A : nom de l'onglet répété pour chaque ligne du bloc
                wsOut.Cells(destRow, 1).Resize(lastRow, 1).Value = ws.Name

                ' 2) Coller TOUT le bloc à partir de la colonne B (pour préserver sa mise en page interne)
                rng.Copy
                wsOut.Cells(destRow, 2).PasteSpecial Paste:=xlPasteAll
                Application.CutCopyMode = False

                ' 3) Ligne vide entre les blocs
                destRow = Application.Max(destRow + lastRow, wsOut.Cells(wsOut.Rows.Count, 1).End(xlUp).Row) + 2
            End If
        End If
    Next ws

    wsOut.Columns.AutoFit
    wsOut.Activate

CleanExit:
    Application.ScreenUpdating = True
    Application.EnableEvents = True
    Application.Calculation = xlCalculationAutomatic
    Exit Sub

AddErr:
    MsgBox "Impossible d'ajouter une feuille dans ce classeur." & vbCrLf & _
           "Vérifiez que la structure du classeur n'est pas protégée " & _
           "(Révision > Protéger le classeur).", vbExclamation, "Erreur 1004 - Sheets.Add"
    Resume CleanExit
End Sub

' Génère un nom de feuille unique sans supprimer
Private Function UniqueSheetName(wb As Workbook, baseName As String) As String
    Dim i As Long, candidate As String, exists As Boolean
    Dim wsCheck As Worksheet
    candidate = baseName: i = 1
    Do
        exists = False
        For Each wsCheck In wb.Worksheets
            If StrComp(wsCheck.Name, candidate, vbTextCompare) = 0 Then
                exists = True: Exit For
            End If
        Next wsCheck
        If Not exists Then
            UniqueSheetName = candidate
            Exit Function
        End If
        i = i + 1
        candidate = baseName & " (" & i & ")"
    Loop
End Function