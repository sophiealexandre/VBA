Option Explicit

Sub StackAllSheets_WithTabNameInColA()
    Dim wb As Workbook: Set wb = ActiveWorkbook
    Dim ws As Worksheet, wsOut As Worksheet
    Dim destRow As Long, lastRow As Long, lastCol As Long
    Dim rng As Range, arr As Variant
    Dim outName As String
    
    Application.ScreenUpdating = False
    Application.EnableEvents = False
    Application.Calculation = xlCalculationManual
    
    ' Créer une feuille de sortie avec un nom unique
    outName = UniqueSheetName(wb, "StackResult")
    Set wsOut = wb.Worksheets.Add(After:=wb.Worksheets(wb.Worksheets.Count))
    wsOut.Name = outName
    
    destRow = 1
    
    ' Parcourir toutes les feuilles
    For Each ws In wb.Worksheets
        If ws.Name <> wsOut.Name Then
            
            ' Déterminer la zone utilisée
            On Error Resume Next
            lastRow = ws.Cells.Find("*", , , , xlByRows, xlPrevious).Row
            lastCol = ws.Cells.Find("*", , , , xlByColumns, xlPrevious).Column
            On Error GoTo 0
            
            If lastRow > 0 And lastCol > 0 Then
                Set rng = ws.Range(ws.Cells(1, 1), ws.Cells(lastRow, lastCol))
                
                ' Charger le bloc de données dans un array
                arr = rng.Value
                
                ' Écrire le nom de la feuille en colonne A, et les données à partir de B
                wsOut.Cells(destRow, 1).Resize(UBound(arr, 1), 1).Value = ws.Name
                wsOut.Cells(destRow, 2).Resize(UBound(arr, 1), UBound(arr, 2)).Value = arr
                
                ' Avancer la ligne d'insertion
                destRow = destRow + UBound(arr, 1) + 1   ' +1 pour une ligne vide entre les blocs
            End If
        End If
    Next ws
    
    wsOut.Columns.AutoFit
    wsOut.Activate
    
    Application.ScreenUpdating = True
    Application.EnableEvents = True
    Application.Calculation = xlCalculationAutomatic
    
    MsgBox "Empilement terminé dans '" & wsOut.Name & "'.", vbInformation
End Sub

' Génère un nom de feuille unique sans supprimer
Private Function UniqueSheetName(wb As Workbook, baseName As String) As String
    Dim i As Long, candidate As String, exists As Boolean
    Dim wsCheck As Worksheet
    candidate = baseName: i = 1
    Do
        exists = False
        For Each wsCheck In wb.Worksheets
            If StrComp(wsCheck.Name, candidate, vbTextCompare) = 0 Then
                exists = True: Exit For
            End If
        Next wsCheck
        If Not exists Then
            UniqueSheetName = candidate
            Exit Function
        End If
        i = i + 1
        candidate = baseName & " (" & i & ")"
    Loop
End Function