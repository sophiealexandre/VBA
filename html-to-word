Sub ExportHTMLWithParagraphsBreaksAndLists()
    Dim WordApp As Object
    Dim WordDoc As Object
    Dim ws As Worksheet
    Dim i As Integer
    Dim htmlText As String
    Dim objHtml As Object
    Dim objElements As Object
    Dim objElement As Object
    Dim TitleText As String
    Dim folderPath As String
    Dim cleanFileName As String
    Dim fNameTest As String
    Dim fileIndex As Integer

    ' Définir la feuille active
    Set ws = ThisWorkbook.Sheets(1)
    
    ' Créer le dossier Exports si nécessaire
    folderPath = ThisWorkbook.Path & "\Exports\"
    If Dir(folderPath, vbDirectory) = "" Then MkDir folderPath

    ' Créer Word
    Set WordApp = CreateObject("Word.Application")
    WordApp.Visible = False ' True si tu veux voir Word pendant l'exécution

    ' Boucle sur les 10 premières cellules de la colonne I
    For i = 1 To 10
        htmlText = ws.Cells(i, 9).Value ' Colonne I
        
        If Trim(htmlText) <> "" Then
            ' Charger le HTML
            Set objHtml = CreateObject("htmlfile")
            objHtml.Open
            objHtml.Write htmlText
            objHtml.Close

            ' Nouveau document Word
            Set WordDoc = WordApp.Documents.Add

            ' Parcourir tous les éléments HTML
            Set objElements = objHtml.getElementsByTagName("*")
            
            TitleText = ""

            For Each objElement In objElements
                Select Case LCase(objElement.tagName)
                    Case "h1"
                        If TitleText = "" Then
                            TitleText = objElement.innerText
                        End If
                        AddText WordDoc, objElement.innerText, "Heading 1"
                    Case "h2"
                        AddText WordDoc, objElement.innerText, "Heading 2"
                    Case "h3"
                        AddText WordDoc, objElement.innerText, "Heading 3"
                    Case "p"
                        If Trim(objElement.innerText) <> "" Then
                            AddText WordDoc, objElement.innerText, "Normal"
                        End If
                    Case "br"
                        WordDoc.Content.InsertAfter vbCrLf
                    Case "ul"
                        ' On ne fait rien, on traite les <li>
                    Case "li"
                        If Trim(objElement.innerText) <> "" Then
                            AddBullet WordDoc, objElement.innerText
                        End If
                End Select
            Next objElement

            ' S'il n'y a pas eu de H1
            If TitleText = "" Then TitleText = "Sans_Titre_" & i

            ' Nettoyer pour créer le nom de fichier
            cleanFileName = CleanFileName(TitleText)

            ' Protection contre doublons
            fNameTest = folderPath & cleanFileName & ".docx"
            fileIndex = 1
            Do While Dir(fNameTest) <> ""
                fNameTest = folderPath & cleanFileName & "_" & fileIndex & ".docx"
                fileIndex = fileIndex + 1
            Loop

            ' Sauvegarder
            WordDoc.SaveAs fNameTest
            WordDoc.Close False
        End If
    Next i

    ' Terminer Word
    WordApp.Quit

    ' Nettoyage mémoire
    Set WordDoc = Nothing
    Set WordApp = Nothing
    Set objHtml = Nothing

    MsgBox "Export terminé dans : " & folderPath
End Sub

' Ajoute du texte formaté dans Word
Sub AddText(ByRef WordDoc As Object, ByVal txt As String, ByVal styleName As String)
    With WordDoc.Content.Paragraphs.Last.Range
        .Text = txt
        .Style = styleName
    End With
    WordDoc.Content.Paragraphs.Add
End Sub

' Ajoute une puce de liste dans Word
Sub AddBullet(ByRef WordDoc As Object, ByVal txt As String)
    With WordDoc.Content.Paragraphs.Last.Range
        .Text = txt
        .Style = "List Paragraph"
        .ListFormat.ApplyBulletDefault
    End With
    WordDoc.Content.Paragraphs.Add
End Sub

' Nettoie le titre pour l'utiliser comme nom de fichier
Function CleanFileName(ByVal FileName As String) As String
    Dim IllegalChars As Variant
    Dim i As Integer

    IllegalChars = Array("/", "\", ":", "*", "?", """", "<", ">", "|")

    For i = LBound(IllegalChars) To UBound(IllegalChars)
        FileName = Replace(FileName, IllegalChars(i), "")
    Next i

    CleanFileName = Trim(FileName)
End Function
